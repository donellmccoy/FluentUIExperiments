<ui:UiPage
    x:Class="FluentUIExperiments.Views.Pages.WorkflowPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:FluentUIExperiments.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="WorkflowPage"
    d:Background="{DynamicResource ApplicationBackgroundBrush}"
    d:DataContext="{d:DesignInstance local:WorkflowPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="1100"
    d:DesignWidth="1100"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Border
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="1"
            IsEnabled="{Binding ViewModel.IsBusy, Converter={StaticResource BooleanToReverseConverter}}">
            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                <Label Content="County" Target="{Binding ElementName=CountyComboBox}" />
                <ComboBox
                    x:Name="CountyComboBox"
                    Margin="0,0,0,0"
                    VerticalAlignment="Stretch"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ViewModel.Counties}"
                    SelectedItem="{Binding ViewModel.SelectedCounty}"
                    SelectedValuePath="CountyId" />
                <Label
                    Margin="0,10,0,0"
                    Content="Type of Work"
                    Target="{Binding ElementName=TypesOfWorkComboBox}" />
                <ComboBox
                    x:Name="TypesOfWorkComboBox"
                    Margin="0,0,0,0"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ViewModel.TypesOfWork}"
                    SelectedItem="{Binding ViewModel.SelectedTypeOfWork}"
                    SelectedValuePath="TypeOfWorkId" />
                <Label
                    Margin="0,10,0,0"
                    Content="Type of Instrument"
                    Target="{Binding ElementName=TypesOfInstrumentsComboBox}" />
                <ComboBox
                    x:Name="TypesOfInstrumentsComboBox"
                    Margin="0,0,0,0"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ViewModel.TypesOfInstruments}"
                    SelectedItem="{Binding ViewModel.SelectedTypeOfInstrument}"
                    SelectedValuePath="TypeOfInstrumentId" />
                <Label
                    Margin="0,10,0,0"
                    Content="Before Date"
                    Target="{Binding ElementName=CountyComboBox}" />
                <DatePicker Margin="0,2,0,0" />
                <Label
                    Margin="0,10,0,0"
                    Content="Date of File"
                    Target="{Binding ElementName=CountyComboBox}" />
                <DatePicker Margin="0,2,0,0" />
                <Label
                    Margin="0,10,0,0"
                    Content="Number of Units"
                    Target="{Binding ElementName=CountyComboBox}" />
                <ComboBox
                    x:Name="CountyComboBox4"
                    Margin="0,0,0,0"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ViewModel.Counties}"
                    SelectedItem="{Binding ViewModel.SelectedCounty}"
                    SelectedValuePath="CountyId" />
                <Label
                    Margin="0,10,0,0"
                    Content="Count By"
                    Target="{Binding ElementName=TypesOfCountByComboBox}" />
                <ComboBox
                    x:Name="TypesOfCountByComboBox"
                    Margin="0,0,0,0"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ViewModel.TypesOfCountBy}"
                    SelectedItem="{Binding ViewModel.SelectedTypeOfCountBy}"
                    SelectedValuePath="TypeOfCountById" />
                <CheckBox
                    Margin="0,10,0,0"
                    Content="Include MCN with criminal and suspect"
                    IsChecked="{Binding ViewModel.IncludeMcnWithCriminalAndSuspect}" />
                <CheckBox
                    Margin="0,10,0,0"
                    Content="Include auto-completed criminal and suspect"
                    IsChecked="{Binding ViewModel.IncludeAutoCompletedCriminalAndSuspect}" />
                <CheckBox
                    Margin="0,10,0,0"
                    Content="Include auto-completed junk documents"
                    IsChecked="{Binding ViewModel.IncludeAutoCompletedJunkDocuments}" />
                <CheckBox
                    Margin="0,10,0,0"
                    Content="Display available work"
                    IsChecked="{Binding ViewModel.DisplayAvailableWork}" />
            </StackPanel>
        </Border>
        <ui:Button
            x:Name="GetWorkButton3"
            Grid.Row="1"
            Grid.RowSpan="1"
            Grid.Column="0"
            Margin="0,60,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            Appearance="Primary"
            Command="{Binding ViewModel.GetCompletedUserEventsCommand, Mode=OneWay}"
            Content="Get Work"
            ToolTipService.ToolTip="Gets new work" />
    </Grid>
</ui:UiPage>
